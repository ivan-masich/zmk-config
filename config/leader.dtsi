#undef ZMK_LEADER_SEQUENCE
#define ZMK_LEADER_SEQUENCE(name, leader_bindings, leader_sequence) \
    / { \
        behaviors { \
            leader: leader { \
                compatible = "zmk,behavior-leader-key"; \
                #binding-cells = <0>; \
                ignore-keys = <LSHFT RSHFT>; \
                leader_sequence_ ## name { \
                    bindings = <leader_bindings>; \
                    sequence = <leader_sequence>; \
                }; \
            }; \
        }; \
    };

/* Spanish special characters */
ZMK_UNICODE_PAIR(es_excl_qmark_inv,  N0, N0, B, F,  N0, N0, A, N1)  // ¿/¡
ZMK_UNICODE_PAIR(es_angle_quotes,    N0, N0, A, B,  N0, N0, B, B)   // «/»

ZMK_LEADER_SEQUENCE(es_a_acute,      &es_a_acute,                 A)  // á/Á
ZMK_LEADER_SEQUENCE(es_e_acute,      &es_e_acute,                 E)  // é/É
ZMK_LEADER_SEQUENCE(es_i_acute,      &es_i_acute,                 I)  // í/Í
ZMK_LEADER_SEQUENCE(es_o_acute,      &es_o_acute,                 O)  // ó/Ó
ZMK_LEADER_SEQUENCE(es_u_acute,      &es_u_acute,                 U)  // ú/Ú
ZMK_LEADER_SEQUENCE(es_u_dieresis,   &es_u_dieresis,            SQT)  // ü/Ü
ZMK_LEADER_SEQUENCE(es_n_tilde,      &es_n_tilde,                 N)  // ñ/Ñ
ZMK_LEADER_SEQUENCE(es_excl_inv,     &es_excl_qmark_inv,       EXCL)  // ¡
ZMK_LEADER_SEQUENCE(es_qmark_inv,    &es_excl_qmark_inv,      QMARK)  // ¿
ZMK_LEADER_SEQUENCE(es_ang_qt_lt,    &es_angle_quotes,          DOT)  // «
ZMK_LEADER_SEQUENCE(es_ang_qt_rt,    &es_angle_quotes,        COLON)  // »

// BLE and USB
#ifdef CONFIG_WIRELESS
ZMK_LEADER_SEQUENCE(usb,        &out OUT_USB,   U S B)
ZMK_LEADER_SEQUENCE(ble,        &out OUT_BLE,   B L E)
#endif // CONFIG_WIRELESS
ZMK_LEADER_SEQUENCE(reset,      &sys_reset,     R E S E T)
ZMK_LEADER_SEQUENCE(boot,       &bootloader,    B O O T)

